apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.prod.yml --controller deployment --out k8s
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: schemaregistry0
  name: schemaregistry0
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: schemaregistry0
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.prod.yml --controller deployment --out k8s
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: schemaregistry0
    spec:
      initContainers:
        - name: wait-for-kafka
          image: busybox
          command: ['sh', '-c', 'until nc -z kafka0 9092; do echo waiting for kafka; sleep 2; done;']
      containers:
        - env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: schemaregistry0
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: PLAINTEXT://kafka0:29092
            - name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
              value: PLAINTEXT
            - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
              value: _schemas
            - name: SCHEMA_REGISTRY_LISTENERS
              value: http://schemaregistry0:8085
            - name: SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL
              value: INFO
            - name: SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL
              value: http
          image: confluentinc/cp-schema-registry:7.2.1
          name: schemaregistry0
          ports:
            - containerPort: 8085
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: "536870912"
            requests:
              cpu: 500m
              memory: "268435456"
      restartPolicy: Always
